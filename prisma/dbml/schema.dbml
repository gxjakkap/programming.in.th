//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table account {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  oauth_token_secret String
  oauth_token String
  user user [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table session {
  id String [pk]
  sessionToken String [unique, not null]
  userId String [not null]
  expires DateTime [not null]
  user user [not null]
}

Table user {
  id String [pk]
  username String [unique]
  name String
  email String [unique]
  emailVerified DateTime
  image String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  admin Boolean [not null, default: false]
  accounts account [not null]
  sessions session [not null]
  submissions submission [not null]
  bookmarks bookmark [not null]
  assessments user_on_assessment [not null]
  ownedAssessments owner_on_assessment [not null]
}

Table verification_token {
  identifier String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (identifier, token) [unique]
  }
}

Table bookmark {
  createdAt DateTime [default: `now()`, not null]
  user user [not null]
  userId String [not null]
  task task [not null]
  taskId String [not null]

  indexes {
    (taskId, userId) [pk]
  }
}

Table task {
  id String [pk]
  title String [not null]
  fullScore Int [not null]
  private Boolean [not null, default: false]
  type TaskType [not null, default: 'NORMAL']
  statement StatementType [not null, default: 'PDF']
  tags tag [not null]
  bookmarks bookmark [not null]
  submissions submission [not null]
  taskOnAssessment task_on_assessment [not null]
  category category
  categoryId String
}

Table category {
  id String [pk]
  name String [not null]
  childCategory category [not null]
  parentCategory category
  tasks task [not null]
  parentCategoryId String
}

Table submission {
  id Int [pk, increment]
  taskId String [not null]
  status String [not null, default: 'In Queue']
  submittedAt DateTime [default: `now()`, not null]
  time Int [not null, default: 0]
  memory Int [not null, default: 0]
  code Bytes [not null]
  score Int [not null, default: 0]
  groups Json [not null, default: '[]']
  language String [not null]
  private Boolean [not null, default: false]
  userId String
  assessmentId String
  user user
  assessment assessment
  task task [not null]
}

Table assessment {
  id String [pk]
  name String [unique, not null]
  archived Boolean [not null, default: false]
  description String
  instruction String
  submissions submission [not null]
  tasks task_on_assessment [not null]
  users user_on_assessment [not null]
  owners owner_on_assessment [not null]
  open DateTime [default: `now()`, not null]
  close DateTime [not null]
  scoringType ScoringType [not null, default: 'BEST_SUBMISSION']
  isLeaderboardPublic Boolean [not null, default: false]
}

Table task_on_assessment {
  task task [not null]
  taskId String [not null]
  assessment assessment [not null]
  assessmentId String [not null]

  indexes {
    (taskId, assessmentId) [pk]
  }
}

Table user_on_assessment {
  user user [not null]
  userId String [not null]
  assessment assessment [not null]
  assessmentId String [not null]

  indexes {
    (userId, assessmentId) [pk]
  }
}

Table owner_on_assessment {
  user user [not null]
  userId String [not null]
  assessment assessment [not null]
  assessmentId String [not null]

  indexes {
    (userId, assessmentId) [pk]
  }
}

Table tag {
  id Int [pk, increment]
  name String [unique, not null]
  tasks task [not null]
}

Table testcase_sync_status {
  taskId String [unique, not null]
  lastSynced DateTime [not null]
  syncStatus SyncStatus [not null]
}

Table TagToTask {
  tagsId Int [ref: > tag.id]
  tasksId String [ref: > task.id]
}

Enum StatementType {
  PDF
  MARKDOWN
}

Enum TaskType {
  NORMAL
  COMMUNICATION
  OUTPUT_ONLY
}

Enum ScoringType {
  BEST_SUBMISSION
  SUM_SUBTASK
}

Enum SyncStatus {
  PENDING
  SUCCESS
  FAILED
}

Ref: account.userId > user.id [delete: Cascade]

Ref: session.userId > user.id [delete: Cascade]

Ref: bookmark.userId > user.id

Ref: bookmark.taskId > task.id

Ref: task.categoryId > category.id

Ref: category.parentCategoryId > category.id

Ref: submission.userId > user.id [delete: Set Null]

Ref: submission.assessmentId > assessment.id [delete: Set Null]

Ref: submission.taskId > task.id [delete: Cascade]

Ref: task_on_assessment.taskId > task.id

Ref: task_on_assessment.assessmentId > assessment.id [delete: Cascade]

Ref: user_on_assessment.userId > user.id

Ref: user_on_assessment.assessmentId > assessment.id [delete: Cascade]

Ref: owner_on_assessment.userId > user.id

Ref: owner_on_assessment.assessmentId > assessment.id [delete: Cascade]